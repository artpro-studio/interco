//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

import { useStore } from '../store';
export class ApiClientConfig {
    public AntiforgeryToken: string | undefined = undefined;
    public AuthToken: string | undefined = undefined;
    // public Lang: string | undefined = undefined;
}

export class BaseApiClient {
    private readonly config: ApiClientConfig;
    // AbortController используется для отмены асинхронных задач
    // в данном случае это будет fetch
    private abortController: AbortController = new AbortController();

    // на объекте abortController.signal генерируется событие abort
    private get abortSignal(): AbortSignal {
        return this.abortController.signal;
    }

    protected constructor(config: ApiClientConfig) {
        this.config = config;
    }

    // функция для отмены http запроса
    abortRequest() {
        this.abortController.abort();
    }

    // функция вызвается при каждом запросе
    transformOptions(options: RequestInit): Promise<RequestInit> {
        if (options && options.headers) {
            if (options.method && this.config && this.config.AntiforgeryToken) {
                const method = options.method.toUpperCase();
                if (method !== 'GET' && method !== 'HEAD' && method !== 'TRACE' && method !== 'OPTIONS') {
                    options.headers = {
                        ...options.headers,
                        RequestVerificationToken: this.config.AntiforgeryToken,
                    };
                }
            }
            if (this.config.AuthToken) {
                // добавление токена JWT в заголовок авторизации
                options.headers = {
                    ...options.headers,
                    Authorization: 'Bearer ' + this.config.AuthToken,
                };
            }
            // if (this.config.Lang) {
            //     // добавление заголовка с язкыом
            //     // используется для локализации приложения
            //     options.headers = {
            //         ...options.headers,
            //         'Accept-Language': this.config.Lang,
            //     };
            // }
        }

        if (options) {
            options.signal = this.abortSignal;
        }

        return Promise.resolve(options);
    }

    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    getBaseUrl(_1: string, baseUrl?: string): string {
        return getBaseApiUrl();
    }

    // вызывается при обработке результатов запроса
    transformResult(url: string, response: Response, callback: (_response: Response) => Promise<any>): Promise<any> {
        response.headers.forEach((value: string, key: string) => {
            if (key === 'set-cookie') {
                if (value.startsWith('.AspNetCore.Antiforgery')) {
                    const equalIndex = value.indexOf('=');
                    this.config.AntiforgeryToken = value.substring(equalIndex + 1);
                }
            }
        });

        if (response.status === 500) {
            //store.commit('mainLayoutModule/setVisibleSmthWentWrongBlock', true);
        }

        return callback(response);
    }
}

export class AppControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    getHello(): Promise<void> {
        let url_ = this.baseUrl + "/api";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetHello(_response));
        });
    }

    protected processGetHello(response: Response): Promise<void> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            return;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<void>(null as any);
    }
}

export class UserControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Select список пользователей
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     */
    getSelect(search: string, page: number, limit: number): Promise<ResultDropDownDto> {
        let url_ = this.baseUrl + "/api/user/select?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetSelect(_response));
        });
    }

    protected processGetSelect(response: Response): Promise<ResultDropDownDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDropDownDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDropDownDto>(null as any);
    }

    /**
     * Получение информации о текущем пользователе
     */
    getCurrentInfo(): Promise<ResultUserDto> {
        let url_ = this.baseUrl + "/api/user/currentUser";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetCurrentInfo(_response));
        });
    }

    protected processGetCurrentInfo(response: Response): Promise<ResultUserDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultUserDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultUserDto>(null as any);
    }

    /**
     * Удаление пользователей по ids
     * @param ids IDs пользователей
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/user/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Список пользователей
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param role (optional) Роль
     */
    get(search: string, page: number, limit: number, role?: Role[] | undefined): Promise<UserListDto> {
        let url_ = this.baseUrl + "/api/user?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (role === null)
            throw new Error("The parameter 'role' cannot be null.");
        else if (role !== undefined)
            role && role.forEach(item => { url_ += "role=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<UserListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as UserListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<UserListDto>(null as any);
    }

    /**
     * Создание пользователя
     */
    create(body: UserDto): Promise<ResultUserDto> {
        let url_ = this.baseUrl + "/api/user";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultUserDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultUserDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultUserDto>(null as any);
    }

    /**
     * Обновление пользователя
     */
    update(body: UserDto): Promise<ResultUserDto> {
        let url_ = this.baseUrl + "/api/user";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultUserDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultUserDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultUserDto>(null as any);
    }

    /**
     * Получение пользователя
     * @param id ID пользователя
     */
    getOne(id: number): Promise<ResultUserDto> {
        let url_ = this.baseUrl + "/api/user/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultUserDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultUserDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultUserDto>(null as any);
    }

    /**
     * Удаление пользователя
     * @param id ID пользователя
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/user/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class AuthControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Подтверждение смены пароль
     * @param password Пароль
     * @param uuid UUID
     */
    replacePassword(password: string, uuid: string): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/auth/replace-password?";
        if (password === undefined || password === null)
            throw new Error("The parameter 'password' must be defined and cannot be null.");
        else
            url_ += "password=" + encodeURIComponent("" + password) + "&";
        if (uuid === undefined || uuid === null)
            throw new Error("The parameter 'uuid' must be defined and cannot be null.");
        else
            url_ += "uuid=" + encodeURIComponent("" + uuid) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processReplacePassword(_response));
        });
    }

    protected processReplacePassword(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Подтверждение почты
     * @param uuid UUID
     */
    confirmEmail(uuid: string): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/auth/confirm-email?";
        if (uuid === undefined || uuid === null)
            throw new Error("The parameter 'uuid' must be defined and cannot be null.");
        else
            url_ += "uuid=" + encodeURIComponent("" + uuid) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processConfirmEmail(_response));
        });
    }

    protected processConfirmEmail(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Проверка есть ли активный uuid
     * @param uuid UUID
     */
    isActiveUUID(uuid: string): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/auth/is-active-uuid?";
        if (uuid === undefined || uuid === null)
            throw new Error("The parameter 'uuid' must be defined and cannot be null.");
        else
            url_ += "uuid=" + encodeURIComponent("" + uuid) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processIsActiveUUID(_response));
        });
    }

    protected processIsActiveUUID(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Запрос на смену пароль
     * @param email E-mail
     */
    confirmReplace(email: string): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/auth/confirm-replace?";
        if (email === undefined || email === null)
            throw new Error("The parameter 'email' must be defined and cannot be null.");
        else
            url_ += "email=" + encodeURIComponent("" + email) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processConfirmReplace(_response));
        });
    }

    protected processConfirmReplace(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Авторизация
     */
    login(body: LoginDto): Promise<ResultLogin> {
        let url_ = this.baseUrl + "/api/auth/login";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processLogin(_response));
        });
    }

    protected processLogin(response: Response): Promise<ResultLogin> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultLogin;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultLogin>(null as any);
    }

    /**
     * Регистрация
     */
    register(body: RegisterDto): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/auth/register";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processRegister(_response));
        });
    }

    protected processRegister(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class SettingsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Есть ли настроки сайта
     */
    isActive(): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/settings/is-active";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processIsActive(_response));
        });
    }

    protected processIsActive(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание настроек
     */
    create(body: CreateSettingsDto): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/settings";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Обновление настроек
     */
    update(body: FullSettingsDto): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/settings";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Получение настроек
     */
    get(): Promise<ResultSettingsDto> {
        let url_ = this.baseUrl + "/api/settings";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ResultSettingsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsDto>(null as any);
    }
}

export class SettingsContactsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Создание контактов
     */
    create(body: SettingsContactsDto): Promise<ResultSettingsContactsDto> {
        let url_ = this.baseUrl + "/api/settings-contacts";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultSettingsContactsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsContactsDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsContactsDto>(null as any);
    }

    /**
     * Обновление контактов
     */
    update(body: SettingsContactsDto): Promise<ResultSettingsContactsDto> {
        let url_ = this.baseUrl + "/api/settings-contacts";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultSettingsContactsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsContactsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsContactsDto>(null as any);
    }

    /**
     * Получение настроек
     * @param isPhone Телефон?
     */
    get(isPhone: boolean): Promise<ResultSettingsContactsListDto> {
        let url_ = this.baseUrl + "/api/settings-contacts?";
        if (isPhone === undefined || isPhone === null)
            throw new Error("The parameter 'isPhone' must be defined and cannot be null.");
        else
            url_ += "isPhone=" + encodeURIComponent("" + isPhone) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ResultSettingsContactsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsContactsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsContactsListDto>(null as any);
    }

    /**
     * Получение найстрокий по id
     * @param id ID пользователя
     */
    getOne(id: number): Promise<ResultSettingsContactsDto> {
        let url_ = this.baseUrl + "/api/settings-contacts/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultSettingsContactsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsContactsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsContactsDto>(null as any);
    }
}

export class SettingsMenuControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Удаление меню по ids
     * @param ids IDs меню
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/settings-menu/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Получение списка меню
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     */
    get(search: string, page: number, limit: number): Promise<ResponseListSettingsMenuDto> {
        let url_ = this.baseUrl + "/api/settings-menu?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ResponseListSettingsMenuDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseListSettingsMenuDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseListSettingsMenuDto>(null as any);
    }

    /**
     * Создание меню
     */
    create(body: SettingsMenuDto): Promise<ResultSettingsMenuDto> {
        let url_ = this.baseUrl + "/api/settings-menu";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultSettingsMenuDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsMenuDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsMenuDto>(null as any);
    }

    /**
     * Обновление меню
     */
    update(body: SettingsMenuDto): Promise<ResultSettingsMenuDto> {
        let url_ = this.baseUrl + "/api/settings-menu";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultSettingsMenuDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsMenuDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsMenuDto>(null as any);
    }

    /**
     * Получение меню
     * @param id ID меню
     */
    getOne(id: number): Promise<ResultSettingsMenuDto> {
        let url_ = this.baseUrl + "/api/settings-menu/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultSettingsMenuDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsMenuDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsMenuDto>(null as any);
    }

    /**
     * Удаление пункта меню
     * @param id ID страницы
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/settings-menu/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class SettingsMenuItemControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Обновление пункта меню
     */
    onUpdateOrder(body: OrderSettingsMenuItemDto): Promise<ResultSettingsMenuItemDto> {
        let url_ = this.baseUrl + "/api/settings-menu-item/update-order";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processOnUpdateOrder(_response));
        });
    }

    protected processOnUpdateOrder(response: Response): Promise<ResultSettingsMenuItemDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsMenuItemDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsMenuItemDto>(null as any);
    }

    /**
     * Получение списка пунктов меню
     * @param id ID меню
     */
    get(id: number): Promise<ResponseSettingsMenuItemDto> {
        let url_ = this.baseUrl + "/api/settings-menu-item/list/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ResponseSettingsMenuItemDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseSettingsMenuItemDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseSettingsMenuItemDto>(null as any);
    }

    /**
     * Получение пункта меню
     * @param id ID меню
     */
    getOne(id: number): Promise<ResultSettingsMenuItemDto> {
        let url_ = this.baseUrl + "/api/settings-menu-item/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultSettingsMenuItemDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsMenuItemDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsMenuItemDto>(null as any);
    }

    /**
     * Удаление пункта меню
     * @param id ID страницы
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/settings-menu-item/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание пункта меню
     */
    create(body: CreateSettingsMenuItemDto): Promise<ResultSettingsMenuItemDto> {
        let url_ = this.baseUrl + "/api/settings-menu-item";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultSettingsMenuItemDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsMenuItemDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsMenuItemDto>(null as any);
    }

    /**
     * Обновление пункта меню
     */
    update(body: CreateSettingsMenuItemDto): Promise<ResultSettingsMenuItemDto> {
        let url_ = this.baseUrl + "/api/settings-menu-item";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultSettingsMenuItemDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultSettingsMenuItemDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultSettingsMenuItemDto>(null as any);
    }
}

export class SettingsPublicControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Получение списка пунктов меню
     * @param slug Список меню
     */
    getMenuForSlug(slug: string): Promise<ResponseSettingsMenuItemDto> {
        let url_ = this.baseUrl + "/api/settings-public/menu?";
        if (slug === undefined || slug === null)
            throw new Error("The parameter 'slug' must be defined and cannot be null.");
        else
            url_ += "slug=" + encodeURIComponent("" + slug) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetMenuForSlug(_response));
        });
    }

    protected processGetMenuForSlug(response: Response): Promise<ResponseSettingsMenuItemDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseSettingsMenuItemDto;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseSettingsMenuItemDto>(null as any);
    }
}

export class PagesControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Select список страниц
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     */
    getSelect(search: string, page: number, limit: number): Promise<ResultDropDownDto> {
        let url_ = this.baseUrl + "/api/pages/select?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetSelect(_response));
        });
    }

    protected processGetSelect(response: Response): Promise<ResultDropDownDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDropDownDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDropDownDto>(null as any);
    }

    /**
     * Получение списка страниц по id для select
     * @param ids Массив id страниц
     */
    getSelectIds(ids: number[]): Promise<ResultDropDownDto> {
        let url_ = this.baseUrl + "/api/pages/select-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetSelectIds(_response));
        });
    }

    protected processGetSelectIds(response: Response): Promise<ResultDropDownDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDropDownDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDropDownDto>(null as any);
    }

    /**
     * Проверка есть ли страница
     * @param id ID страницы
     */
    isPage(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages/is-page{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processIsPage(_response));
        });
    }

    protected processIsPage(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Получение страницы
     * @param id ID страницы
     */
    getOne(id: number): Promise<ResultPagesFullDto> {
        let url_ = this.baseUrl + "/api/pages/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultPagesFullDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesFullDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesFullDto>(null as any);
    }

    /**
     * Удаление страницы
     * @param id ID страницы
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление страниц по ids
     * @param ids IDs страниц
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание страницы
     */
    create(body: PagesDto): Promise<ResultPagesDto> {
        let url_ = this.baseUrl + "/api/pages";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultPagesDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesDto>(null as any);
    }

    /**
     * Обновление страницы
     */
    update(body: PagesDto): Promise<ResultPagesDto> {
        let url_ = this.baseUrl + "/api/pages";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultPagesDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesDto>(null as any);
    }

    /**
     * Список страниц
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param pagesType (optional) Тип страницы
     */
    get(search: string, page: number, limit: number, pagesType?: PagesType | undefined): Promise<PagesListDto> {
        let url_ = this.baseUrl + "/api/pages?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (pagesType === null)
            throw new Error("The parameter 'pagesType' cannot be null.");
        else if (pagesType !== undefined)
            url_ += "pagesType=" + encodeURIComponent("" + pagesType) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<PagesListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesListDto>(null as any);
    }
}

export class RecordsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Select список записей
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     */
    getSelect(search: string, page: number, limit: number): Promise<ResultDropDownDto> {
        let url_ = this.baseUrl + "/api/records/select?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetSelect(_response));
        });
    }

    protected processGetSelect(response: Response): Promise<ResultDropDownDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDropDownDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDropDownDto>(null as any);
    }

    /**
     * Получение записи
     * @param id ID записи
     */
    getOne(id: number): Promise<ResultRecordsFullDto> {
        let url_ = this.baseUrl + "/api/records/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultRecordsFullDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultRecordsFullDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultRecordsFullDto>(null as any);
    }

    /**
     * Удаление записи
     * @param id ID записи
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/records/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Получение записи для создания и редактирования
     * @param id ID записи
     */
    getCreateOrUpdate(id: number): Promise<ResultRecordsCreateDto> {
        let url_ = this.baseUrl + "/api/records/get-create-or-update/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetCreateOrUpdate(_response));
        });
    }

    protected processGetCreateOrUpdate(response: Response): Promise<ResultRecordsCreateDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultRecordsCreateDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultRecordsCreateDto>(null as any);
    }

    /**
     * Удаление записей по ids
     * @param ids IDs записей
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/records/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Список записей
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id (optional) ID страницы
     * @param pages (optional) ids странииц
     */
    get(search: string, page: number, limit: number, id?: number | null | undefined, pages?: number[] | null | undefined): Promise<RecordsListDto> {
        let url_ = this.baseUrl + "/api/records?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        if (pages !== undefined && pages !== null)
            pages && pages.forEach(item => { url_ += "pages=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<RecordsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as RecordsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<RecordsListDto>(null as any);
    }

    /**
     * Создание записи
     */
    create(body: CreateRecordsDto): Promise<ResultRecordsCreateDto> {
        let url_ = this.baseUrl + "/api/records";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultRecordsCreateDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultRecordsCreateDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultRecordsCreateDto>(null as any);
    }

    /**
     * Обновление записи
     */
    update(body: CreateRecordsDto): Promise<ResultRecordsCreateDto> {
        let url_ = this.baseUrl + "/api/records";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultRecordsCreateDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultRecordsCreateDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultRecordsCreateDto>(null as any);
    }
}

export class PagesCommentsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Обновление статусов комментариев
     * @param status Статус
     * @param ids IDs комментариев
     */
    onSuccessStatusIds(status: CommentStatus, ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-comments/on-success-status-ids/{id}?";
        if (status === undefined || status === null)
            throw new Error("The parameter 'status' must be defined and cannot be null.");
        else
            url_ += "status=" + encodeURIComponent("" + status) + "&";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processOnSuccessStatusIds(_response));
        });
    }

    protected processOnSuccessStatusIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Обновление статуса комментария
     * @param status Статус
     * @param id ID комметария
     */
    onSuccessStatus(status: CommentStatus, id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-comments/on-success-status/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (status === undefined || status === null)
            throw new Error("The parameter 'status' must be defined and cannot be null.");
        else
            url_ += "status=" + encodeURIComponent("" + status) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processOnSuccessStatus(_response));
        });
    }

    protected processOnSuccessStatus(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Получение комментария
     * @param id ID комметария
     */
    getOne(id: number): Promise<ResultPagesCommentsDto> {
        let url_ = this.baseUrl + "/api/pages-comments/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultPagesCommentsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesCommentsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesCommentsDto>(null as any);
    }

    /**
     * Удаление комментария
     * @param id ID комментария
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-comments/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление комментарий по ids
     * @param ids IDs записей
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-comments/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание комментария
     */
    create(body: CreatePagesCommentsDto): Promise<ResultPagesCommentsDto> {
        let url_ = this.baseUrl + "/api/pages-comments";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultPagesCommentsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesCommentsDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesCommentsDto>(null as any);
    }

    /**
     * Обновление комментария
     */
    update(body: CreatePagesCommentsDto): Promise<ResultPagesCommentsDto> {
        let url_ = this.baseUrl + "/api/pages-comments";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultPagesCommentsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesCommentsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesCommentsDto>(null as any);
    }

    /**
     * Список комментарий
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id (optional) ID записи
     * @param blogId (optional) ID блога
     * @param status (optional) Статус
     */
    get(search: string, page: number, limit: number, id?: number | null | undefined, blogId?: number | null | undefined, status?: CommentStatus | undefined): Promise<PagesCommentsListDto> {
        let url_ = this.baseUrl + "/api/pages-comments?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        if (blogId !== undefined && blogId !== null)
            url_ += "blogId=" + encodeURIComponent("" + blogId) + "&";
        if (status === null)
            throw new Error("The parameter 'status' cannot be null.");
        else if (status !== undefined)
            url_ += "status=" + encodeURIComponent("" + status) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<PagesCommentsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesCommentsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesCommentsListDto>(null as any);
    }
}

export class PagesComponentsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Получение компонента
     * @param id ID компонента
     */
    getOne(id: number): Promise<ResultPagesComponentsDto> {
        let url_ = this.baseUrl + "/api/pages-components/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultPagesComponentsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesComponentsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesComponentsDto>(null as any);
    }

    /**
     * Удаление компонента
     * @param id ID компонента
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-components/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление комментарий по ids
     * @param ids IDs записей
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-components/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание компонента
     */
    create(body: CreatePagesComponents): Promise<ResultPagesComponentsDto> {
        let url_ = this.baseUrl + "/api/pages-components";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultPagesComponentsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesComponentsDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesComponentsDto>(null as any);
    }

    /**
     * Обновление компонента
     */
    update(body: CreatePagesComponents): Promise<ResultPagesComponentsDto> {
        let url_ = this.baseUrl + "/api/pages-components";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultPagesComponentsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesComponentsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesComponentsDto>(null as any);
    }

    /**
     * Список компонентов
     * @param id ID cтраницы
     */
    get(id: number): Promise<PagesComponentsListDto> {
        let url_ = this.baseUrl + "/api/pages-components?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined and cannot be null.");
        else
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<PagesComponentsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesComponentsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesComponentsListDto>(null as any);
    }
}

export class PagesPublicControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Получение сео параметров у страницы
     * @param slug Slug страницы
     */
    getSeoPage(slug: string): Promise<ResultPagesSeoPublicDto> {
        let url_ = this.baseUrl + "/api/pages-public/get-seo-for-page?";
        if (slug === undefined || slug === null)
            throw new Error("The parameter 'slug' must be defined and cannot be null.");
        else
            url_ += "slug=" + encodeURIComponent("" + slug) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetSeoPage(_response));
        });
    }

    protected processGetSeoPage(response: Response): Promise<ResultPagesSeoPublicDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesSeoPublicDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesSeoPublicDto>(null as any);
    }

    /**
     * Получение страницы
     * @param slug Slug страницы
     */
    getOneForSlug(slug: string): Promise<ResultPagesFullDto> {
        let url_ = this.baseUrl + "/api/pages-public?";
        if (slug === undefined || slug === null)
            throw new Error("The parameter 'slug' must be defined and cannot be null.");
        else
            url_ += "slug=" + encodeURIComponent("" + slug) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOneForSlug(_response));
        });
    }

    protected processGetOneForSlug(response: Response): Promise<ResultPagesFullDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesFullDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesFullDto>(null as any);
    }

    /**
     * Получение компонентов страницы
     * @param slug Slug страницы
     */
    getComponentsForSlug(slug: string): Promise<PagesComponentsListDto> {
        let url_ = this.baseUrl + "/api/pages-public/components?";
        if (slug === undefined || slug === null)
            throw new Error("The parameter 'slug' must be defined and cannot be null.");
        else
            url_ += "slug=" + encodeURIComponent("" + slug) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetComponentsForSlug(_response));
        });
    }

    protected processGetComponentsForSlug(response: Response): Promise<PagesComponentsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesComponentsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesComponentsListDto>(null as any);
    }

    /**
     * Получение всех страниц с типом блог
     */
    getPagesBlogs(): Promise<PagesListDto> {
        let url_ = this.baseUrl + "/api/pages-public/pages-blogs";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetPagesBlogs(_response));
        });
    }

    protected processGetPagesBlogs(response: Response): Promise<PagesListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesListDto>(null as any);
    }

    /**
     * Получение записей блога
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param slug Символьный код страницы
     */
    getRecordsBlogs(search: string, page: number, limit: number, slug: string): Promise<RecordsListDto> {
        let url_ = this.baseUrl + "/api/pages-public/records-blog?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (slug === undefined || slug === null)
            throw new Error("The parameter 'slug' must be defined and cannot be null.");
        else
            url_ += "slug=" + encodeURIComponent("" + slug) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetRecordsBlogs(_response));
        });
    }

    protected processGetRecordsBlogs(response: Response): Promise<RecordsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as RecordsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<RecordsListDto>(null as any);
    }

    /**
     * Получение одной записи блога
     * @param id ID записи
     */
    getRecord(id: number): Promise<ResultRecordsFullDto> {
        let url_ = this.baseUrl + "/api/pages-public/record/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetRecord(_response));
        });
    }

    protected processGetRecord(response: Response): Promise<ResultRecordsFullDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultRecordsFullDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultRecordsFullDto>(null as any);
    }

    /**
     * Получение комментариев записи
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id ID записи
     */
    getRecordComments(search: string, page: number, limit: number, id: number): Promise<PagesCommentsListDto> {
        let url_ = this.baseUrl + "/api/pages-public/record-comments/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetRecordComments(_response));
        });
    }

    protected processGetRecordComments(response: Response): Promise<PagesCommentsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesCommentsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesCommentsListDto>(null as any);
    }

    /**
     * Понравился комметарий
     * @param id ID записи
     */
    isLikeComment(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-public/is-like-comment/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processIsLikeComment(_response));
        });
    }

    protected processIsLikeComment(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание комментария
     */
    createComment(body: CreateCommentsDto): Promise<ResultPagesCommentsDto> {
        let url_ = this.baseUrl + "/api/pages-public/create-comments";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreateComment(_response));
        });
    }

    protected processCreateComment(response: Response): Promise<ResultPagesCommentsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesCommentsDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesCommentsDto>(null as any);
    }
}

export class PagesParamsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список парамметров
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id ID страницы
     */
    get(search: string, page: number, limit: number, id: number): Promise<PagesParamsListDto> {
        let url_ = this.baseUrl + "/api/pages-params/list/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<PagesParamsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesParamsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesParamsListDto>(null as any);
    }

    /**
     * Получение парамметра
     * @param id ID справчоника
     */
    getOne(id: number): Promise<ResultPagesParamsDto> {
        let url_ = this.baseUrl + "/api/pages-params/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultPagesParamsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesParamsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesParamsDto>(null as any);
    }

    /**
     * Удаление парамметров
     * @param id ID парамметра
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-params/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание парамметра
     */
    create(body: CreatePagesParamsDto): Promise<ResultPagesParamsDto> {
        let url_ = this.baseUrl + "/api/pages-params";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultPagesParamsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesParamsDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesParamsDto>(null as any);
    }

    /**
     * Обновление парамметра
     */
    update(body: CreatePagesParamsDto): Promise<ResultPagesParamsDto> {
        let url_ = this.baseUrl + "/api/pages-params";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultPagesParamsDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesParamsDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesParamsDto>(null as any);
    }

    /**
     * Удаление парамметров справочника по ids
     * @param ids IDs парамметров
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-params/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class PagesIblockControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Разделы у iblock
     * @param iblockID ID iblock
     */
    getSections(iblockID: number): Promise<ResultPagesIblockSectionDto> {
        let url_ = this.baseUrl + "/api/pages-iblock/sections?";
        if (iblockID === undefined || iblockID === null)
            throw new Error("The parameter 'iblockID' must be defined and cannot be null.");
        else
            url_ += "iblockID=" + encodeURIComponent("" + iblockID) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetSections(_response));
        });
    }

    protected processGetSections(response: Response): Promise<ResultPagesIblockSectionDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesIblockSectionDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesIblockSectionDto>(null as any);
    }

    /**
     * Список полей у iblock
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param iblockID ID iblock
     */
    getFields(search: string, page: number, limit: number, iblockID: number | null): Promise<PagesIblockFieldsListDto> {
        let url_ = this.baseUrl + "/api/pages-iblock/fields?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (iblockID === undefined)
            throw new Error("The parameter 'iblockID' must be defined.");
        else if(iblockID !== null)
            url_ += "iblockID=" + encodeURIComponent("" + iblockID) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetFields(_response));
        });
    }

    protected processGetFields(response: Response): Promise<PagesIblockFieldsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesIblockFieldsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesIblockFieldsListDto>(null as any);
    }

    /**
     * Список
     * @param id ID
     */
    getOne(id: number): Promise<ResultPagesIblockDto> {
        let url_ = this.baseUrl + "/api/pages-iblock/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultPagesIblockDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesIblockDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesIblockDto>(null as any);
    }

    /**
     * Удаление
     * @param id ID
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-iblock/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Список
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param pageID ID страницы
     */
    get(search: string, page: number, limit: number, pageID: number | null): Promise<PagesIblockListDto> {
        let url_ = this.baseUrl + "/api/pages-iblock?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (pageID === undefined)
            throw new Error("The parameter 'pageID' must be defined.");
        else if(pageID !== null)
            url_ += "pageID=" + encodeURIComponent("" + pageID) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<PagesIblockListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesIblockListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesIblockListDto>(null as any);
    }

    /**
     * Создание
     */
    create(body: PagesIblockDto): Promise<ResultPagesIblockDto> {
        let url_ = this.baseUrl + "/api/pages-iblock";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultPagesIblockDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesIblockDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesIblockDto>(null as any);
    }

    /**
     * Обновление
     */
    update(body: PagesIblockDto): Promise<ResultPagesIblockDto> {
        let url_ = this.baseUrl + "/api/pages-iblock";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultPagesIblockDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesIblockDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesIblockDto>(null as any);
    }

    /**
     * Удаление по ids
     * @param ids IDs
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-iblock/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class PagesIblockRecordsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Одна запись
     * @param id ID
     */
    getOne(id: number): Promise<ResultPagesIblockRecordsPublicDto> {
        let url_ = this.baseUrl + "/api/pages-iblock-records/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultPagesIblockRecordsPublicDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesIblockRecordsPublicDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesIblockRecordsPublicDto>(null as any);
    }

    /**
     * Удаление записи
     * @param id ID
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-iblock-records/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Список записей
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param iblockID ID iblock
     */
    get(search: string, page: number, limit: number, iblockID: number | null): Promise<PagesIblockRecordsListDto> {
        let url_ = this.baseUrl + "/api/pages-iblock-records?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (iblockID === undefined)
            throw new Error("The parameter 'iblockID' must be defined.");
        else if(iblockID !== null)
            url_ += "iblockID=" + encodeURIComponent("" + iblockID) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<PagesIblockRecordsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as PagesIblockRecordsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<PagesIblockRecordsListDto>(null as any);
    }

    /**
     * Создание записи
     */
    create(body: CreatePagesIblockRecordDto): Promise<ResultPagesIblockRecordsPublicDto> {
        let url_ = this.baseUrl + "/api/pages-iblock-records";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultPagesIblockRecordsPublicDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesIblockRecordsPublicDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesIblockRecordsPublicDto>(null as any);
    }

    /**
     * Обновление записи
     */
    update(body: CreatePagesIblockRecordDto): Promise<ResultPagesIblockRecordsPublicDto> {
        let url_ = this.baseUrl + "/api/pages-iblock-records";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultPagesIblockRecordsPublicDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultPagesIblockRecordsPublicDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultPagesIblockRecordsPublicDto>(null as any);
    }

    /**
     * Удаление записей по ids
     * @param ids IDs
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/pages-iblock-records/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class LibraryFilesControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Загрузка файла
     * @param id (optional) ID директории
     * @param file (optional) Файл
     */
    uploadFile(id?: number | undefined, file?: FileParameter | undefined): Promise<ResponseLibraryFiles> {
        let url_ = this.baseUrl + "/api/library-files/upload?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = new FormData();
        if (file === null || file === undefined)
            throw new Error("The parameter 'file' cannot be null.");
        else
            content_.append("file", file.data, file.fileName ? file.fileName : "file");

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUploadFile(_response));
        });
    }

    protected processUploadFile(response: Response): Promise<ResponseLibraryFiles> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseLibraryFiles;
            return result201;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseLibraryFiles>(null as any);
    }

    /**
     * Список директорий
     * @param page Страница
     * @param search (optional) Название директории
     */
    getListDirectory(page: number, search?: string | undefined): Promise<ResponseLibraryListDto> {
        let url_ = this.baseUrl + "/api/library-files/list-directory?";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (search === null)
            throw new Error("The parameter 'search' cannot be null.");
        else if (search !== undefined)
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetListDirectory(_response));
        });
    }

    protected processGetListDirectory(response: Response): Promise<ResponseLibraryListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseLibraryListDto;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseLibraryListDto>(null as any);
    }

    /**
     * Список файлов у директории
     * @param directory Директория
     */
    getFilesForDirectory(directory: number): Promise<ResponseLibraryFilesList> {
        let url_ = this.baseUrl + "/api/library-files/files-for-directory?";
        if (directory === undefined || directory === null)
            throw new Error("The parameter 'directory' must be defined and cannot be null.");
        else
            url_ += "directory=" + encodeURIComponent("" + directory) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetFilesForDirectory(_response));
        });
    }

    protected processGetFilesForDirectory(response: Response): Promise<ResponseLibraryFilesList> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseLibraryFilesList;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseLibraryFilesList>(null as any);
    }

    /**
     * Удаление файлов
     * @param ids IDs файлов и директорий
     */
    deleteFileIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/library-files/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteFileIds(_response));
        });
    }

    protected processDeleteFileIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание директории
     */
    create(body: CreateLibraryFilesDto): Promise<ResponseLibraryFiles> {
        let url_ = this.baseUrl + "/api/library-files";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResponseLibraryFiles> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseLibraryFiles;
            return result201;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseLibraryFiles>(null as any);
    }

    /**
     * Список файлов
     * @param limit Кол-во записей
     * @param page Страница
     * @param type (optional) Тип файла
     * @param fileName (optional) Название файла
     * @param directory (optional) Директория
     */
    get(limit: number, page: number, type?: FileType | undefined, fileName?: string | undefined, directory?: number | undefined): Promise<ResponseLibraryListDto> {
        let url_ = this.baseUrl + "/api/library-files?";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (type === null)
            throw new Error("The parameter 'type' cannot be null.");
        else if (type !== undefined)
            url_ += "type=" + encodeURIComponent("" + type) + "&";
        if (fileName === null)
            throw new Error("The parameter 'fileName' cannot be null.");
        else if (fileName !== undefined)
            url_ += "fileName=" + encodeURIComponent("" + fileName) + "&";
        if (directory === null)
            throw new Error("The parameter 'directory' cannot be null.");
        else if (directory !== undefined)
            url_ += "directory=" + encodeURIComponent("" + directory) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ResponseLibraryListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseLibraryListDto;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseLibraryListDto>(null as any);
    }

    /**
     * Удаление файла
     * @param id ID файла или раздела
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/library-files/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Получение одого файла
     * @param id ID
     */
    getOne(id: number | null): Promise<ResponseLibraryFiles> {
        let url_ = this.baseUrl + "/api/library-files/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResponseLibraryFiles> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseLibraryFiles;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseLibraryFiles>(null as any);
    }

    /**
     * Обновление название файла
     * @param id ID
     * @param name Страница
     */
    update(id: number | null, name: string): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/library-files/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (name === undefined || name === null)
            throw new Error("The parameter 'name' must be defined and cannot be null.");
        else
            url_ += "name=" + encodeURIComponent("" + name) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "PATCH",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class ReferenceBookControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список справочников
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     */
    get(search: string, page: number, limit: number): Promise<ReferenceBookListDto> {
        let url_ = this.baseUrl + "/api/reference-book?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ReferenceBookListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ReferenceBookListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ReferenceBookListDto>(null as any);
    }

    /**
     * Создание справочника
     */
    create(body: ReferenceBookDto): Promise<ResultReferenceBookDto> {
        let url_ = this.baseUrl + "/api/reference-book";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultReferenceBookDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultReferenceBookDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultReferenceBookDto>(null as any);
    }

    /**
     * Обновление справчоника
     */
    update(body: ReferenceBookDto): Promise<ResultReferenceBookDto> {
        let url_ = this.baseUrl + "/api/reference-book";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultReferenceBookDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultReferenceBookDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultReferenceBookDto>(null as any);
    }

    /**
     * Получение справочника
     * @param id ID справчоника
     */
    getOne(id: number): Promise<ResultReferenceBookDto> {
        let url_ = this.baseUrl + "/api/reference-book/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultReferenceBookDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultReferenceBookDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultReferenceBookDto>(null as any);
    }

    /**
     * Удаление справочника
     * @param id ID страницы
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление справочников по ids
     * @param ids IDs страниц
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class ReferenceBookAttributeControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список атрибутов справочника
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id ID справчоника
     */
    get(search: string, page: number, limit: number, id: number): Promise<ReferenceBookAttributesListDto> {
        let url_ = this.baseUrl + "/api/reference-book-attribute/list/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ReferenceBookAttributesListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ReferenceBookAttributesListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ReferenceBookAttributesListDto>(null as any);
    }

    /**
     * Получение атрибута справчоника
     * @param id ID справчоника
     */
    getOne(id: number): Promise<ResultReferenceBookAttributesDto> {
        let url_ = this.baseUrl + "/api/reference-book-attribute/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultReferenceBookAttributesDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultReferenceBookAttributesDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultReferenceBookAttributesDto>(null as any);
    }

    /**
     * Удаление атрибута справочника
     * @param id ID атрибута
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book-attribute/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание атрибута справочинка
     */
    create(body: CreateReferenceBookAttributesDto): Promise<ResultReferenceBookAttributesDto> {
        let url_ = this.baseUrl + "/api/reference-book-attribute";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultReferenceBookAttributesDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultReferenceBookAttributesDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultReferenceBookAttributesDto>(null as any);
    }

    /**
     * Обновление атрибута справочинка
     */
    update(body: CreateReferenceBookAttributesDto): Promise<ResultReferenceBookAttributesDto> {
        let url_ = this.baseUrl + "/api/reference-book-attribute";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultReferenceBookAttributesDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultReferenceBookAttributesDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultReferenceBookAttributesDto>(null as any);
    }

    /**
     * Удаление атрибутов справочника по ids
     * @param ids IDs атрибутов
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book-attribute/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class ReferenceBookInstancesControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список записей справочника
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id ID справчоника
     */
    get(search: string, page: number, limit: number, id: number): Promise<ResponseBookAttributesListDto> {
        let url_ = this.baseUrl + "/api/reference-book-instances/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ResponseBookAttributesListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseBookAttributesListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseBookAttributesListDto>(null as any);
    }

    /**
     * Создание записей справочника
     * @param id ID справчоника
     */
    create(id: number, body: CreateReferenceBookInstancesDto): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book-instances/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Обуновление записи справочника
     * @param id ID записи
     */
    update(id: number, body: CreateReferenceBookInstancesDto): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book-instances/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление записи справочника
     * @param id ID записи
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book-instances/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Запись справочника
     * @param id ID записи
     */
    getOne(id: number): Promise<ResultReferenceBookInstanceBaseDto> {
        let url_ = this.baseUrl + "/api/reference-book-instances/one/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultReferenceBookInstanceBaseDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultReferenceBookInstanceBaseDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultReferenceBookInstanceBaseDto>(null as any);
    }

    /**
     * Удаление записей по ids
     * @param ids IDs записей
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/reference-book-instances/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class PublicReferenceBookInstancesControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список записей справочника
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param slug Символьный код справочника
     */
    get(search: string, page: number, limit: number, slug: string): Promise<ResponseBookAttributesListDto> {
        let url_ = this.baseUrl + "/api/public-reference-book-instances?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        if (slug === undefined || slug === null)
            throw new Error("The parameter 'slug' must be defined and cannot be null.");
        else
            url_ += "slug=" + encodeURIComponent("" + slug) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<ResponseBookAttributesListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResponseBookAttributesListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResponseBookAttributesListDto>(null as any);
    }
}

export class CallbackControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список форм заявок
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     */
    get(search: string, page: number, limit: number): Promise<CallbackListDto> {
        let url_ = this.baseUrl + "/api/callback?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<CallbackListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as CallbackListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<CallbackListDto>(null as any);
    }

    /**
     * Создание формы
     */
    create(body: CallbackDto): Promise<ResultCallbackDto> {
        let url_ = this.baseUrl + "/api/callback";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultCallbackDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackDto>(null as any);
    }

    /**
     * Обновление формы
     */
    update(body: CallbackDto): Promise<ResultCallbackDto> {
        let url_ = this.baseUrl + "/api/callback";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultCallbackDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackDto>(null as any);
    }

    /**
     * Получение формы
     * @param id ID формы
     */
    getOne(id: number): Promise<ResultCallbackDto> {
        let url_ = this.baseUrl + "/api/callback/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultCallbackDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackDto>(null as any);
    }

    /**
     * Удаление формы
     * @param id ID формы
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/callback/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление формы по ids
     * @param ids IDs формы
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/callback/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class CallbackFieldControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список полей форсы
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id ID формы
     */
    get(search: string, page: number, limit: number, id: number): Promise<CallbackFieldListDto> {
        let url_ = this.baseUrl + "/api/callback-field/list/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<CallbackFieldListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as CallbackFieldListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<CallbackFieldListDto>(null as any);
    }

    /**
     * Получение поля
     * @param id ID поля
     */
    getOne(id: number): Promise<ResultCallbackFieldDto> {
        let url_ = this.baseUrl + "/api/callback-field/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultCallbackFieldDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackFieldDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackFieldDto>(null as any);
    }

    /**
     * Удаление поля формы
     * @param id ID формы
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/callback-field/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Создание поля формы
     */
    create(body: CreateCallbackFieldDto): Promise<ResultCallbackFieldDto> {
        let url_ = this.baseUrl + "/api/callback-field";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultCallbackFieldDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackFieldDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackFieldDto>(null as any);
    }

    /**
     * Обновление поля формы
     */
    update(body: CreateCallbackFieldDto): Promise<ResultCallbackFieldDto> {
        let url_ = this.baseUrl + "/api/callback-field";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultCallbackFieldDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackFieldDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackFieldDto>(null as any);
    }

    /**
     * Удаление атрибутов справочника по ids
     * @param ids IDs полей
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/callback-field/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class CallbackInstancesControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Запись справочника
     * @param id ID записи
     */
    getOne(id: number): Promise<ResultCallbackInstancesBaseDto> {
        let url_ = this.baseUrl + "/api/callback-instances/one/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultCallbackInstancesBaseDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackInstancesBaseDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackInstancesBaseDto>(null as any);
    }

    /**
     * Список записей справочника
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     * @param id ID справчоника
     */
    get(search: string, page: number, limit: number, id: number): Promise<CallbackInstancesListBaseDto> {
        let url_ = this.baseUrl + "/api/callback-instances/{id}?";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<CallbackInstancesListBaseDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as CallbackInstancesListBaseDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<CallbackInstancesListBaseDto>(null as any);
    }

    /**
     * Создание записей справочника
     * @param id ID формы
     */
    create(id: number, body: CreateCallbackInstancesDto): Promise<ResultCallbackInstancesBaseDto> {
        let url_ = this.baseUrl + "/api/callback-instances/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultCallbackInstancesBaseDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackInstancesBaseDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackInstancesBaseDto>(null as any);
    }

    /**
     * Обуновление записи справочника
     * @param id ID записи
     */
    update(id: number, body: CreateCallbackInstancesDto): Promise<ResultCallbackInstancesBaseDto> {
        let url_ = this.baseUrl + "/api/callback-instances/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultCallbackInstancesBaseDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultCallbackInstancesBaseDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultCallbackInstancesBaseDto>(null as any);
    }

    /**
     * Удаление записи справочника
     * @param id ID записи
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/callback-instances/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление записей по ids
     * @param ids IDs записей
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/callback-instances/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export class AmoCustomFieldsControllerClient extends BaseApiClient {
    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(configuration: ApiClientConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
        super(configuration);
        this.http = http ? http : window as any;
        this.baseUrl = this.getBaseUrl("", baseUrl);
    }

    /**
     * Список кастомных полей
     * @param search Поиск
     * @param page Страница
     * @param limit Количество
     */
    get(search: string, page: number, limit: number): Promise<AmoCustmoFieldsListDto> {
        let url_ = this.baseUrl + "/api/amo-custom-fields?";
        if (search === undefined || search === null)
            throw new Error("The parameter 'search' must be defined and cannot be null.");
        else
            url_ += "search=" + encodeURIComponent("" + search) + "&";
        if (page === undefined || page === null)
            throw new Error("The parameter 'page' must be defined and cannot be null.");
        else
            url_ += "page=" + encodeURIComponent("" + page) + "&";
        if (limit === undefined || limit === null)
            throw new Error("The parameter 'limit' must be defined and cannot be null.");
        else
            url_ += "limit=" + encodeURIComponent("" + limit) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGet(_response));
        });
    }

    protected processGet(response: Response): Promise<AmoCustmoFieldsListDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as AmoCustmoFieldsListDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<AmoCustmoFieldsListDto>(null as any);
    }

    /**
     * Создание кастомного поля
     */
    create(body: AmoCustmoFieldsDto): Promise<ResultAmoCustmoFieldstDto> {
        let url_ = this.baseUrl + "/api/amo-custom-fields";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processCreate(_response));
        });
    }

    protected processCreate(response: Response): Promise<ResultAmoCustmoFieldstDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 201) {
            return response.text().then((_responseText) => {
            let result201: any = null;
            result201 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultAmoCustmoFieldstDto;
            return result201;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultAmoCustmoFieldstDto>(null as any);
    }

    /**
     * Обновление кастомного поля
     */
    update(body: AmoCustmoFieldsDto): Promise<ResultAmoCustmoFieldstDto> {
        let url_ = this.baseUrl + "/api/amo-custom-fields";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let options_: RequestInit = {
            body: content_,
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processUpdate(_response));
        });
    }

    protected processUpdate(response: Response): Promise<ResultAmoCustmoFieldstDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultAmoCustmoFieldstDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultAmoCustmoFieldstDto>(null as any);
    }

    /**
     * Получение кастомного поля
     * @param id ID
     */
    getOne(id: number): Promise<ResultAmoCustmoFieldstDto> {
        let url_ = this.baseUrl + "/api/amo-custom-fields/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processGetOne(_response));
        });
    }

    protected processGetOne(response: Response): Promise<ResultAmoCustmoFieldstDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultAmoCustmoFieldstDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445", status, _responseText, _headers, result204);
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultAmoCustmoFieldstDto>(null as any);
    }

    /**
     * Удаление кастомного поля
     * @param id ID
     */
    delete(id: number): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/amo-custom-fields/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDelete(_response));
        });
    }

    protected processDelete(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }

    /**
     * Удаление кастомного поля по ids
     * @param ids IDs
     */
    deleteIds(ids: number[]): Promise<ResultDto> {
        let url_ = this.baseUrl + "/api/amo-custom-fields/delete-ids?";
        if (ids === undefined || ids === null)
            throw new Error("The parameter 'ids' must be defined and cannot be null.");
        else
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let options_: RequestInit = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };

        return this.transformOptions(options_).then(transformedOptions_ => {
            return this.http.fetch(url_, transformedOptions_);
        }).then((_response: Response) => {
            return this.transformResult(url_, _response, (_response: Response) => this.processDeleteIds(_response));
        });
    }

    protected processDeleteIds(response: Response): Promise<ResultDto> {
        const status = response.status;
        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
        if (status === 200) {
            return response.text().then((_responseText) => {
            let result200: any = null;
            result200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result200;
            });
        } else if (status === 204) {
            return response.text().then((_responseText) => {
            let result204: any = null;
            result204 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return result204;
            });
        } else if (status === 400) {
            return response.text().then((_responseText) => {
            let result400: any = null;
            result400 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d, \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430", status, _responseText, _headers, result400);
            });
        } else if (status === 401) {
            return response.text().then((_responseText) => {
            let result401: any = null;
            result401 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u044b \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b", status, _responseText, _headers, result401);
            });
        } else if (status === 403) {
            return response.text().then((_responseText) => {
            let result403: any = null;
            result403 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result403);
            });
        } else if (status === 404) {
            return response.text().then((_responseText) => {
            let result404: any = null;
            result404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result404);
            });
        } else if (status === 405) {
            return response.text().then((_responseText) => {
            let result405: any = null;
            result405 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0449\u0435\u043d, \u0443 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430", status, _responseText, _headers, result405);
            });
        } else if (status === 406) {
            return response.text().then((_responseText) => {
            let result406: any = null;
            result406 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443", status, _responseText, _headers, result406);
            });
        } else if (status === 408) {
            return response.text().then((_responseText) => {
            let result408: any = null;
            result408 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d", status, _responseText, _headers, result408);
            });
        } else if (status === 409) {
            return response.text().then((_responseText) => {
            let result409: any = null;
            result409 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u041a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c", status, _responseText, _headers, result409);
            });
        } else if (status === 500) {
            return response.text().then((_responseText) => {
            let result500: any = null;
            result500 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0421\u0435\u0440\u0432\u0435\u0440 \u0443\u043f\u0430\u043b \u0432 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", status, _responseText, _headers, result500);
            });
        } else if (status === 502) {
            return response.text().then((_responseText) => {
            let result502: any = null;
            result502 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d, \u043f\u043b\u043e\u0445\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435", status, _responseText, _headers, result502);
            });
        } else if (status === 504) {
            return response.text().then((_responseText) => {
            let result504: any = null;
            result504 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ResultDto;
            return throwException("\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u043e\u0441\u044c \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d\u0430", status, _responseText, _headers, result504);
            });
        } else if (status !== 200 && status !== 204) {
            return response.text().then((_responseText) => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve<ResultDto>(null as any);
    }
}

export interface ResultDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;

    [key: string]: any;
}

export interface DropDownDto {
    /** ID записи */
    value: number;
    /** Текст записи */
    label: string;

    [key: string]: any;
}

export interface DropDownOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: DropDownDto[];

    [key: string]: any;
}

export interface ResultDropDownDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: DropDownOptionDto;

    [key: string]: any;
}

export enum Role {
    Admin = "admin",
    Guest = "guest",
}

export interface UserDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Активный пользователь */
    isActive: boolean | null;
    /** Фамилия */
    lastName: string | null;
    /** Имя */
    firstName: string | null;
    /** Отчество */
    middleName: string | null;
    /** Email */
    email: string | null;
    /** Password */
    password: string | null;
    /** Роль */
    role: Role | null;

    [key: string]: any;
}

export interface ResultUserDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: UserDto | null;

    [key: string]: any;
}

export interface UserListOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: UserDto[] | null;

    [key: string]: any;
}

export interface UserListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: UserListOptionDto | null;

    [key: string]: any;
}

export interface LoginDto {
    /** E-mail */
    email: string;
    /** Пароль */
    password: string;

    [key: string]: any;
}

export interface ResultLoginOption {
    /** Токен */
    token: string;
    /** Данные польователя */
    entity: UserDto;

    [key: string]: any;
}

export interface ResultLogin {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: ResultLoginOption;

    [key: string]: any;
}

export interface RegisterDto {
    /** E-mail */
    email: string;
    /** Пароль */
    password: string;
    /** Секретный ключ */
    secret: string;
    /** Имя */
    firstName: string | null;
    /** Фамилия */
    lastName: string | null;
    /** Отчество */
    middleName: string | null;

    [key: string]: any;
}

export interface SettingsContactsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Контент */
    content: string;
    /** Описание */
    description: string;
    /** Телефон? */
    isPhone: boolean;

    [key: string]: any;
}

export interface FullSettingsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название сайта */
    title: string;
    /** Описание сайта */
    description: string | null;
    /** Ссылка на vk */
    vk: string | null;
    /** Ссылка на facebook */
    facebook: string | null;
    /** Ссылка на viber */
    viber: string | null;
    /** Ссылка на whatsapp */
    whatsapp: string | null;
    /** Ссылка на telegram */
    telegram: string | null;
    /** Телефон */
    phone: string | null;
    /** Email */
    email: string | null;
    /** Интеграционная ссылка на битрикс */
    urlBitrix: string | null;
    /** Домен AmoCRM */
    amoDomain: string | null;
    /** Долгострочный токен */
    amoBearer: string | null;
    /** ID интеграции */
    amoClientId: string | null;
    /** Секретный ключ */
    amoClientSecret: string | null;
    /** Почта */
    moreEmail: SettingsContactsDto[] | null;
    /** Телефон */
    morePhone: SettingsContactsDto[] | null;

    [key: string]: any;
}

export interface CreateSettingsDto {
    /** Настройки */
    settings: FullSettingsDto | null;
    /** Пользователь */
    user: UserDto | null;

    [key: string]: any;
}

export interface ResultSettingsDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullSettingsDto | null;

    [key: string]: any;
}

export interface ResultSettingsContactsDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: SettingsContactsDto | null;

    [key: string]: any;
}

export interface ResultSettingsContactsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: SettingsContactsDto[] | null;

    [key: string]: any;
}

export interface SettingsMenuDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название меню */
    title: string;
    /** Hash */
    slug: string;

    [key: string]: any;
}

export interface SettingsMenuOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: SettingsMenuDto[] | null;

    [key: string]: any;
}

export interface ResponseListSettingsMenuDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: SettingsMenuOptionDto | null;

    [key: string]: any;
}

export interface SettingsMenuItemDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название меню */
    title: string;
    /** Hash */
    hash: string;
    /** Порядок */
    order: number;

    [key: string]: any;
}

export interface FullSettingsMenuDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название меню */
    title: string;
    /** Hash */
    slug: string;
    /** Пукты меню */
    points: SettingsMenuItemDto[] | null;

    [key: string]: any;
}

export interface ResultSettingsMenuDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullSettingsMenuDto | null;

    [key: string]: any;
}

export interface OrderSettingsMenuItemDto {
    /** ID меню */
    data: SettingsMenuItemDto[];

    [key: string]: any;
}

export interface ResultSettingsMenuItemDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: SettingsMenuItemDto | null;

    [key: string]: any;
}

export enum ILangTypeSeo {
    RuRU = "ru-RU",
    EnUS = "en-US",
    ZhCN = "zh-CN",
}

export enum IFieldTypeSeo {
    Title = "title",
    Description = "description",
    Keywords = "keywords",
}

export interface PagesSeoParamsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    content: string | null;
    lang: ILangTypeSeo | null;
    fieldType: IFieldTypeSeo | null;
    pagesSeo?: PagesSeoDto | null;

    [key: string]: any;
}

export interface PagesSeoDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    page?: PagesDto | null;
    params?: PagesSeoParamsDto[] | null;

    [key: string]: any;
}

export interface PagesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название */
    name: string | null;
    /** Описание */
    description: string | null;
    /** Символьный код */
    slug: string | null;
    /** Путь к странице компонента */
    pagePath: string | null;
    /** Тип */
    type: PagesDtoType | null;
    /** SEO */
    seo?: PagesSeoDto | null;

    [key: string]: any;
}

export interface FullSettingsMenuItemDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название меню */
    title: string;
    /** Hash */
    hash: string;
    /** Порядок */
    order: number;
    /** Менб */
    menu: SettingsMenuDto;
    /** Менб */
    pages: PagesDto;

    [key: string]: any;
}

export interface ResponseSettingsMenuItemDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullSettingsMenuItemDto[] | null;

    [key: string]: any;
}

export interface CreateSettingsMenuItemDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название меню */
    title: string;
    /** Hash */
    hash: string;
    /** Порядок */
    order: number;
    /** ID меню */
    menuId: number;
    /** ID родителя */
    parentId: number;
    /** ID страницы */
    pagesDropDown: DropDownDto | null;

    [key: string]: any;
}

export interface RecordsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    seoTitle: string | null;
    seoDescription: string | null;
    seoKeywords: string | null;
    /** Заголовок */
    title: string | null;
    /** Описание */
    description: string | null;
    /** Счетчик просмотров */
    countView: number | null;

    [key: string]: any;
}

export interface FullPagesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название */
    name: string | null;
    /** Описание */
    description: string | null;
    /** Символьный код */
    slug: string | null;
    /** Путь к странице компонента */
    pagePath: string | null;
    /** Тип */
    type: FullPagesDtoType | null;
    /** SEO */
    seo?: PagesSeoDto | null;
    /** Записи в блоге */
    records: RecordsDto[] | null;

    [key: string]: any;
}

export interface ResultPagesFullDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullPagesDto | null;

    [key: string]: any;
}

export interface ResultPagesDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesDto | null;

    [key: string]: any;
}

export interface PagesOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: PagesDto[] | null;

    [key: string]: any;
}

export interface PagesListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesOptionDto | null;

    [key: string]: any;
}

export enum CommentStatus {
    Verify = "verify",
    Success = "success",
}

export interface PagesCommentsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Комментарий */
    content: string | null;
    /** Тип */
    status: CommentStatus;
    /** Запись */
    records: RecordsDto | null;
    /** Пользователь */
    user: UserDto | null;
    /** Дочерние комметраии */
    children: PagesCommentsDto[] | null;
    /** Родительский комментарий */
    parent: PagesCommentsDto | null;

    [key: string]: any;
}

export enum ITypePagesParams {
    Text = "text",
    Number = "number",
    Date = "date",
    Datetime = "datetime",
    Editor = "editor",
    Textarea = "textarea",
    File = "file",
    Image = "image",
    Gallary = "gallary",
}

export interface PagesParamsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название парамметра */
    name: string;
    /** Символьный код */
    slug: string;
    /** Тип */
    type: ITypePagesParams;
    /** Тип */
    isFilter: boolean;

    [key: string]: any;
}

export interface FullPagesParamsValueDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Значение */
    value: string;
    /** Json с данными */
    valueJson: string | null;
    /** Парамметр */
    params: PagesParamsDto;
    /** Запись(статья) */
    record: RecordsDto;

    [key: string]: any;
}

export interface FullRecordsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    seoTitle: string | null;
    seoDescription: string | null;
    seoKeywords: string | null;
    /** Заголовок */
    title: string | null;
    /** Описание */
    description: string | null;
    /** Счетчик просмотров */
    countView: number | null;
    /** Комментарии */
    comments: PagesCommentsDto[] | null;
    /** Страница */
    pages: PagesDto | null;
    /** Пользователь */
    author: UserDto | null;
    /** Запись(статья) */
    paramsValue: FullPagesParamsValueDto[];
    /** Парамметры */
    params: any | null;

    [key: string]: any;
}

export interface ResultRecordsFullDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullRecordsDto | null;

    [key: string]: any;
}

export interface CreateRecordsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    seoTitle: string | null;
    seoDescription: string | null;
    seoKeywords: string | null;
    /** Заголовок */
    title: string | null;
    /** Описание */
    description: string | null;
    /** Счетчик просмотров */
    countView: number | null;
    /** ID страницы */
    pages: DropDownDto | null;
    /** Парамметры */
    params: any | null;

    [key: string]: any;
}

export interface ResultRecordsCreateDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: CreateRecordsDto | null;

    [key: string]: any;
}

export interface RecordsOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: FullRecordsDto[] | null;

    [key: string]: any;
}

export interface RecordsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: RecordsOptionDto | null;

    [key: string]: any;
}

export interface ResultPagesCommentsDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesCommentsDto | null;

    [key: string]: any;
}

export interface CreatePagesCommentsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Комментарий */
    content: string | null;
    /** Запись */
    records: DropDownDto | null;
    /** Пользователь */
    user: DropDownDto | null;

    [key: string]: any;
}

export interface PagesCommentsOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: PagesCommentsDto[] | null;

    [key: string]: any;
}

export interface PagesCommentsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesCommentsOptionDto | null;

    [key: string]: any;
}

export interface PagesComponentsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Порядок */
    order: number;
    /** Название компонента */
    name: string;
    /** Json с данными */
    content: string | null;

    [key: string]: any;
}

export interface ResultPagesComponentsDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesComponentsDto | null;

    [key: string]: any;
}

export interface CreatePagesComponents {
    /** ID страницы */
    idPage: number | null;
    /** Контент */
    fields: PagesComponentsDto[] | null;

    [key: string]: any;
}

export interface PagesComponentsOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: PagesComponentsDto[] | null;

    [key: string]: any;
}

export interface PagesComponentsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesComponentsOptionDto | null;

    [key: string]: any;
}

export interface ResultPagesSeoPublicDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity?: any | null;

    [key: string]: any;
}

export interface CreateCommentsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Комментарий */
    content: string | null;
    /** Запись */
    records: number | null;
    /** Запись */
    commentId: number | null;

    [key: string]: any;
}

export interface FullPagesParamsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название парамметра */
    name: string;
    /** Символьный код */
    slug: string;
    /** Тип */
    type: ITypePagesParams;
    /** Тип */
    isFilter: boolean;
    /** Значение параметров */
    paramsValue: FullPagesParamsValueDto[];
    /** Страница */
    pages: PagesDto;

    [key: string]: any;
}

export interface PagesParamsOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: FullPagesParamsDto[] | null;

    [key: string]: any;
}

export interface PagesParamsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesParamsOptionDto | null;

    [key: string]: any;
}

export interface ResultPagesParamsDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullPagesParamsDto | null;

    [key: string]: any;
}

export interface CreatePagesParamsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название парамметра */
    name: string;
    /** Символьный код */
    slug: string;
    /** Тип */
    type: ITypePagesParams;
    /** Тип */
    isFilter: boolean;
    /** Значение параметра */
    pagesId: number | null;

    [key: string]: any;
}

export enum IIblockField {
    Text = "text",
    Array = "array",
    Image = "image",
    Editor = "editor",
}

export enum ILangPages {
    RuRU = "ru-RU",
    EnUS = "en-US",
    ZhCN = "zh-CN",
}

export interface PagesIblockFieldsLabelDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Текст у поля */
    value: string;
    /** Язык */
    lang: ILangPages | null;
    /** Поле */
    field?: PagesIBlockFieldsDto | null;

    [key: string]: any;
}

export interface PagesIBlockFieldsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название */
    name: string;
    /** Символьный код */
    slug: string;
    /** Тип поля */
    type: IIblockField | null;
    /** Label */
    label?: PagesIblockFieldsLabelDto[] | null;
    /** Информационный блок */
    iblock?: PagesIblockDto | null;

    [key: string]: any;
}

export interface PagesIblockDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название */
    name: string;
    /** Символьный код */
    slug: string;
    /** Атрибуты */
    attributes?: any | null;
    /** Страница */
    page?: PagesDto | null;
    /** Поля */
    fields?: PagesIBlockFieldsDto[] | null;
    /** Разделы */
    sections?: PagesIblockSectionDto[] | null;

    [key: string]: any;
}

export interface PagesIblockRecordsFieldValueDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Значение */
    value: string;
    /** Язык */
    lang: ILangPages | null;
    /** Тип поля */
    recordField?: PagesIblockRecordsFieldDto | null;

    [key: string]: any;
}

export interface PagesIblockRecordsFieldDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Запись */
    record?: PagesIblockRecordsDto | null;
    /** Тип поля */
    field?: PagesIBlockFieldsDto | null;
    /** Значение */
    value?: PagesIblockRecordsFieldValueDto[] | null;

    [key: string]: any;
}

export interface PagesIblockRecordsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Поля у записи */
    sort?: number | null;
    /** Поля у записи */
    fields?: PagesIblockRecordsFieldDto[] | null;
    /** Инфоблок */
    iblock?: PagesIblockDto | null;
    /** Разделы */
    sections?: PagesIblockSectionDto[] | null;

    [key: string]: any;
}

export interface PagesIblockSectionValueDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Значение */
    value: string;
    /** Язык */
    lang: ILangPages | null;
    /** Раздел */
    section?: PagesIblockSectionDto | null;

    [key: string]: any;
}

export interface PagesIblockSectionDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Iblock */
    iblock?: PagesIblockDto | null;
    /** Разделы */
    records?: PagesIblockRecordsDto[] | null;
    /** Значение */
    value?: PagesIblockSectionValueDto[] | null;

    [key: string]: any;
}

export interface ResultPagesIblockSectionDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesIblockSectionDto[] | null;

    [key: string]: any;
}

export interface PagesIblockFieldsOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: PagesIBlockFieldsDto[] | null;

    [key: string]: any;
}

export interface PagesIblockFieldsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesIblockFieldsOptionDto | null;

    [key: string]: any;
}

export interface ResultPagesIblockDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesIblockDto | null;

    [key: string]: any;
}

export interface PagesIblockOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: PagesIblockDto[] | null;

    [key: string]: any;
}

export interface PagesIblockListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesIblockOptionDto | null;

    [key: string]: any;
}

export interface ResultPagesIblockRecordsPublicDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity?: any | null;

    [key: string]: any;
}

export interface PagesIblockRecordsOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: PagesIblockRecordsDto[] | null;

    [key: string]: any;
}

export interface PagesIblockRecordsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: PagesIblockRecordsOptionDto | null;

    [key: string]: any;
}

export interface CreatePagesIblockRecordDto {
    /** ID iblock */
    iblockID?: number | null;
    /** Разделы */
    sections?: PagesIblockSectionDto[] | null;
    /** Форма */
    data?: any | null;

    [key: string]: any;
}

export enum FileType {
    Images = "images",
    File = "file",
    Pdf = "pdf",
    Audio = "audio",
    Video = "video",
    Docs = "docs",
    Directory = "directory",
}

export interface CreateLibraryFilesDto {
    /** ID */
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Путь к файлу */
    path: string | null;
    /** Тип файла */
    type: FileType | null;
    /** Название файла или директории */
    name: string;
    /** Название в облаке */
    filename: string;
    /** Размер файла */
    size: number;
    /** Системная директория */
    isSystem: boolean;
    /** Родительский элемент */
    parent: CreateLibraryFilesDto | null;

    [key: string]: any;
}

export interface ResponseLibraryFiles {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Загруженый файл */
    entity: CreateLibraryFilesDto | null;

    [key: string]: any;
}

export interface LibraryOption {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Список файлов */
    entity: CreateLibraryFilesDto[] | null;

    [key: string]: any;
}

export interface ResponseLibraryListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: LibraryOption | null;

    [key: string]: any;
}

export interface ResponseLibraryFilesList {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Загруженый файл */
    entity: CreateLibraryFilesDto[] | null;

    [key: string]: any;
}

export interface ReferenceBookAttributesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название атрибута */
    name: string;
    /** Символьный код */
    slug: string;
    /** Тип */
    type: ReferenceBookAttributesDtoType;

    [key: string]: any;
}

export interface ReferenceBookInstancesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;

    [key: string]: any;
}

export interface FullReferenceBookDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название справочник */
    name: string;
    /** Символьный код */
    slug: string;
    /** Атрибуты */
    attributes: ReferenceBookAttributesDto[];
    /** Записи */
    instances: ReferenceBookInstancesDto[];

    [key: string]: any;
}

export interface ReferenceBookOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: FullReferenceBookDto[] | null;

    [key: string]: any;
}

export interface ReferenceBookListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: ReferenceBookOptionDto | null;

    [key: string]: any;
}

export interface ResultReferenceBookDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullReferenceBookDto | null;

    [key: string]: any;
}

export interface ReferenceBookDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название справочник */
    name: string;
    /** Символьный код */
    slug: string;

    [key: string]: any;
}

export interface ReferenceBookInstancesValueDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Значение */
    value: string;
    /** Json с данными */
    valueJson: string | null;

    [key: string]: any;
}

export interface FullReferenceBookAttributesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название атрибута */
    name: string;
    /** Символьный код */
    slug: string;
    /** Тип */
    type: FullReferenceBookAttributesDtoType;
    /** Справочник */
    referenceBook: ReferenceBookDto;
    /** Значения */
    instancesValue: ReferenceBookInstancesValueDto[];

    [key: string]: any;
}

export interface ReferenceBookAttributesOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: FullReferenceBookAttributesDto[] | null;

    [key: string]: any;
}

export interface ReferenceBookAttributesListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: ReferenceBookAttributesOptionDto | null;

    [key: string]: any;
}

export interface ResultReferenceBookAttributesDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: FullReferenceBookAttributesDto | null;

    [key: string]: any;
}

export interface CreateReferenceBookAttributesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название атрибута */
    name: string;
    /** Символьный код */
    slug: string;
    /** Тип */
    type: CreateReferenceBookAttributesDtoType;
    /** ID справочника */
    referenceBookId: number;

    [key: string]: any;
}

export interface FullReferenceBookInstancesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Справочник */
    referenceBook: ReferenceBookDto;
    /** Значения */
    instancesValue: ReferenceBookInstancesValueDto[];

    [key: string]: any;
}

export interface ResponseBookInstancesOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: FullReferenceBookInstancesDto[] | null;

    [key: string]: any;
}

export interface ResponseBookAttributesListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: ResponseBookInstancesOptionDto | null;

    [key: string]: any;
}

export interface ResultReferenceBookInstanceBaseDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: ReferenceBookInstancesDto | null;

    [key: string]: any;
}

export interface CreateReferenceBookInstancesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;

    [key: string]: any;
}

export interface CallbackDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название формы */
    name: string;
    /** Символьный код */
    slug: string;
    /** Синхронизация с битрикс24 */
    syncBitrix: boolean;
    /** Синхронизация с AmoCRM */
    syncAmo: boolean;
    /** E-mail */
    email: string | null;

    [key: string]: any;
}

export interface CallbackOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: CallbackDto[] | null;

    [key: string]: any;
}

export interface CallbackListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: CallbackOptionDto | null;

    [key: string]: any;
}

export interface ResultCallbackDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: CallbackDto | null;

    [key: string]: any;
}

export enum ICallbackFieldType {
    String = "string",
    Text = "text",
    Number = "number",
    Date = "date",
    Datetime = "datetime",
    Email = "email",
    Phone = "phone",
}

export enum ICallbackFiledAttribute {
    Title = "title",
    Description = "description",
    Name = "name",
    LastName = "lastName",
    SecondName = "secondName",
    Email = "email",
    EmailWork = "emailWork",
    Phone = "phone",
    PhoneWork = "phoneWork",
    Web = "web",
    Price = "price",
    Comments = "comments",
}

export interface CallbackFieldDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название поля */
    name: string;
    /** Тип */
    type: ICallbackFieldType;
    /** Атрибут поля */
    attribute: ICallbackFiledAttribute;
    /** Обязательное поле ? */
    isRequred: boolean;

    [key: string]: any;
}

export interface CallbackFieldOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: CallbackFieldDto[] | null;

    [key: string]: any;
}

export interface CallbackFieldListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: CallbackFieldOptionDto | null;

    [key: string]: any;
}

export interface ResultCallbackFieldDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: CallbackFieldDto | null;

    [key: string]: any;
}

export interface CreateCallbackFieldDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Название поля */
    name: string;
    /** Тип */
    type: ICallbackFieldType;
    /** Атрибут поля */
    attribute: ICallbackFiledAttribute;
    /** Обязательное поле ? */
    isRequred: boolean;
    /** ID формы */
    callbackId: number;

    [key: string]: any;
}

export interface CallbackInstancesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;

    [key: string]: any;
}

export interface ResultCallbackInstancesBaseDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: CallbackInstancesDto | null;

    [key: string]: any;
}

export interface FullCallbackInstancesValueDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Значение */
    value: string;
    /** Запись */
    instance: CallbackInstancesDto;
    /** Поле */
    field: CallbackFieldDto;

    [key: string]: any;
}

export interface FullCallbackInstancesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** Справочник */
    callback: CallbackDto;
    /** Значения */
    instancesValue: FullCallbackInstancesValueDto[];

    [key: string]: any;
}

export interface CallbackInstancesOptionBaseDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: FullCallbackInstancesDto[] | null;

    [key: string]: any;
}

export interface CallbackInstancesListBaseDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: CallbackInstancesOptionBaseDto | null;

    [key: string]: any;
}

export interface CreateCallbackInstancesDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;

    [key: string]: any;
}

export interface AmoCustmoFieldsDto {
    id?: number | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    deletedAt?: string | null;
    /** ID кастомного поля */
    amoID: number;
    /** Атрибут поля */
    attribute: ICallbackFiledAttribute;

    [key: string]: any;
}

export interface AmoCustmoFieldsOptionDto {
    /** Количество записей */
    count: number;
    /** Количество */
    limit: number;
    /** Ответ */
    entity: AmoCustmoFieldsDto[] | null;

    [key: string]: any;
}

export interface AmoCustmoFieldsListDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: AmoCustmoFieldsOptionDto | null;

    [key: string]: any;
}

export interface ResultAmoCustmoFieldstDto {
    /** Статус */
    isSuccess: boolean;
    /** Статус код */
    statusCode: number;
    /** Сообщение */
    message: string;
    /** Ошибки */
    errors: any;
    /** Ответ */
    entity: AmoCustmoFieldsDto | null;

    [key: string]: any;
}

export enum PagesType {
    Landing = "Landing",
    Blog = "blog",
}

export enum PagesDtoType {
    Landing = "Landing",
    Blog = "blog",
}

export enum FullPagesDtoType {
    Landing = "Landing",
    Blog = "blog",
}

export enum ReferenceBookAttributesDtoType {
    Text = "text",
    Number = "number",
    Date = "date",
    Datetime = "datetime",
    Editor = "editor",
    Textarea = "textarea",
    File = "file",
    Image = "image",
    Gallary = "gallary",
    Array = "array",
}

export enum FullReferenceBookAttributesDtoType {
    Text = "text",
    Number = "number",
    Date = "date",
    Datetime = "datetime",
    Editor = "editor",
    Textarea = "textarea",
    File = "file",
    Image = "image",
    Gallary = "gallary",
    Array = "array",
}

export enum CreateReferenceBookAttributesDtoType {
    Text = "text",
    Number = "number",
    Date = "date",
    Datetime = "datetime",
    Editor = "editor",
    Textarea = "textarea",
    File = "file",
    Image = "image",
    Gallary = "gallary",
    Array = "array",
}

export interface FileParameter {
    data: any;
    fileName: string;
}

export class ApiException extends Error {
    message: string;
    status: number;
    response: string;
    headers: { [key: string]: any; };
    result: any;

    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {
        super();

        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }

    protected isApiException = true;

    static isApiException(obj: any): obj is ApiException {
        return obj.isApiException === true;
    }
}

function throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {
    if (result !== null && result !== undefined)
        throw result;
    else
        throw new ApiException(message, status, response, headers, null);
}

export enum ITemplateComponentsType {
    TEXT = 'text',
    EDITOR = 'editor',
    TEXTAREA = 'textarea',
    FILE = 'file',
    IMAGE = 'image',
    GALLARY = 'gallary',
    COLOR = 'color',
    ARRAY = 'array',
}

export interface ITemplateComponentsField {
    type: ITemplateComponentsType;
    name: string;
    label: string;
    default: string;
    value?: string;
    fields?: ITemplateComponentsField[];
    defaultFields?: ITemplateComponentsField[];
    order?: number;
}
export interface ITemplateComponents {
    id?: number;
    name: string;
    title: string;
    icon: string;
    order?: number;
    fields: ITemplateComponentsField[];
    defaultFields?: ITemplateComponentsField[];
}

// класс BaseApiClient используется для генерации файла ApiClient.ts

// Базовый url
export function getBaseApiUrl(): string {
    return 'http://localhost:3000';
}

// функция для получения данных
// для инициализации ApiClient'a
export function getApiClientInitialParams(): ApiClientConfig {
    const store = useStore();
    let token = '';
    if (store) {
        token = store.getters['authorizationModule/getToken'];
    } else if (localStorage.vuex) {
        const localStore = JSON.parse(localStorage.vuex);
        if (localStore.authorizationModule && localStore.authorizationModule.token) {
            token = localStore.authorizationModule.token;
        }
    }
    return {
        AntiforgeryToken: '',
        AuthToken: token,
    };
}